export declare class SizedItem<V> {
    value: V;
    logLevel: number;
    byteSize: number;
    constructor(value: V, logLevel: number);
}
export declare class SizedSet<V> extends Set<SizedItem<V>> {
    currentBytesSize: number;
    hasEvictedLog: boolean;
    add(item: SizedItem<V>): this;
    delete(item: SizedItem<V>): boolean;
    clear(): void;
    shift(): SizedItem<V> | undefined;
}
export declare class CircularMap<V> extends Map<string, SizedSet<V>> {
    #private;
    constructor({ maxBytesSize, onBufferOverflow, }: {
        maxBytesSize: number;
        onBufferOverflow?: () => void;
    });
    setItem(key: string, value: V, logLevel: number): this;
}
//# sourceMappingURL=logBuffer.d.ts.map